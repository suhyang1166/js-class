const a = 87;
const b = 70;
const c = 100;

const average = (a + b + c) / 3;
console.log(average);

// 미션 : 아래배열에서 숫자 5를 찾으세여!
// 그리고 시간 복잡도를 계산하세요
const arr = [1, 3, 5, 7];
// 아이템이 n개가 있을 때 => n번만에 찾음
// 0(n)

// 빅 오메가 : 가장 빠른경우 : 한 번에 값을 찾는 경우
// 빅 오 : 가장 늦은경우 : 배열의 모든 아이템을 검수 => 배열의 길이만큼 시간
// 빅 세타 : 보통경우 : 배열의 중간정도만큼 아이템 검수

// 일반적으로 시간복잡도를 계산 => 어떤 경우를 전제로 삼는가 => 빅 오의 경우!
// o(n)알고리즘을 활용해서 시간 복잡도를 계산!

// o(2n) < o(n2) < o(n) < o(1):가장 빠름

// o(5)

// 배열 요소 : 모든 프로그래밍 언어에 기본적으로 제공되는 자료구조!
// 자바스크립트 자료구조 & 알고리즘 => 시간복잡도 효율 개선!
// 자바 VS 자바스크립트
// int arr[10] = {1,2,3,4,5}
